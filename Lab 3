using System;

using System.Collections.Generic;

using System.Linq;

using System.Text;

using System.Threading.Tasks;

namespace ConsoleApplication1

{

class Program

{

public int[] mas;

public int n = 0;// size

public int min;

public int max;

public int minIndex;

public int maxIndex;

static void Main(string[] args)

{

Program p = new Program();

p.initArray();

p.showArray();

p.showFindResult();

p.sort();

p.showArray();

Console.ReadLine();

}

public void initArray()

{

Console.Write("Enter size of array = "); this.n = Int32.Parse(Console.ReadLine());

this.createData();

for (int i = 0; i < this.mas.Length; i++)

{

Console.Write("Array [" + (i + 1) + "] = "); this.mas[i] = Int32.Parse(Console.ReadLine());

}

this.min = mas[0];

this.max = mas[0];

}

public void createData()

{

this.mas = new int[this.n];

}

public void showArray()

{

Console.Write("Array = ");

foreach (int i in this.mas)

{

Console.Write(i.ToString() + " ");

}

Console.WriteLine();

}

public void showFindResult()

{

Console.WriteLine("MIN = " + this.findMin() + "[" + this.minIndex + "]");

Console.WriteLine("MAX = " + this.findMax() + "[" + this.maxIndex + "]");

Console.WriteLine("Summa = " + this.summElem());

Console.WriteLine("Mul = " + this.mulElem());

}

public int findMin()

{

for (int i = 0; i < this.mas.Length; i++)

{

if (mas[i] < this.min)

{

this.min = mas[i];

this.minIndex = i;

}

}

return this.min;

}

public int findMax()

{

for (int i = 0; i < this.mas.Length; i++)

{

if (mas[i] > this.max)

{

this.max = mas[i];

this.maxIndex = i;

}

}

return this.max;

}

public int summElem()

{

int summ = 0;

for (int i = 0; i < this.mas.Length; i++)

{

if (mas[i] < 0)

{

summ += mas[i];

}

}

return summ;

}

public int mulElem()

{

if ((this.minIndex + 1) == this.maxIndex) return 0;

int rez = 1, start, finish;

if (this.minIndex < this.maxIndex)

{

start = this.minIndex;

finish = this.maxIndex;

}

else

{

finish = this.minIndex;

start = this.maxIndex;

}

for (int i = start + 1; i < finish; i++)

{

rez *= mas[i];

}

return rez;

}

public void sort()

{

int temp = 0;

for (int write = 0; write < this.mas.Length; write++)

{

for (int sort = 0; sort < this.mas.Length - 1; sort++)

{

if (this.mas[sort] > this.mas[sort + 1])

{

temp = this.mas[sort + 1];

this.mas[sort + 1] = this.mas[sort];

this.mas[sort] = temp;

}

}

}

}

}

}
